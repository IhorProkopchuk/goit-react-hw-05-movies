{"version":3,"file":"static/js/597.7cd71118.chunk.js","mappings":"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","sources":["api/api.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7578f42464aa1bf410194c3f5bd12bea';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"MovieCard_cardContainer__ncF0f\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieCard.module.css';\nimport imageNotFound from '../Cast/No_image.png';\n\nconst MovieCard = ({ movie }) => {\n  const { title, genres, release_date, overview, vote_average, poster_path } =\n    movie;\n  const releaseDate = release_date ? new Date(release_date).getFullYear() : '';\n  const userScore = vote_average ? ((vote_average / 10) * 100).toFixed(0) : '';\n  const imgUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w200${poster_path}`\n    : imageNotFound;\n\n  return (\n    <div className={styles.cardContainer}>\n      <img src={imgUrl} alt={title} />\n      <div>\n        <h1>\n          {title} {releaseDate && `(${releaseDate})`}\n        </h1>\n        {userScore && <p>User score: {userScore}%</p>}\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        {genres && genres.length > 0\n          ? (\n          <ul>\n            {genres.slice(0, 3).map((genre, index) => (\n              <li key={index}>{genre.name}</li>\n            ))}\n          </ul>\n            )\n          : (<p>Unknown</p>)}\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"movieInfoLink\":\"MovieDetails_movieInfoLink__L4fVq\",\"btn\":\"MovieDetails_btn__7L5IF\"};","import { Suspense } from 'react';\nimport { useRef, useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { fetchMoviesById } from '../../api/api';\nimport MovieCard from '../../components/MovieCard/MovieCard';\nimport { Loader } from '../../components/Loader/Loader';\n\nimport styles from '../../pages/MovieDetails/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMoviesById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>\n        <button type=\"button\" className={styles.btn}>\n          &#10096; Go back\n        </button>\n      </Link>\n      <MovieCard movie={selectedMovie || {}} />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link className={styles.movieInfoLink} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={styles.movieInfoLink} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews","movie","title","genres","release_date","overview","vote_average","poster_path","releaseDate","Date","getFullYear","userScore","toFixed","imgUrl","imageNotFound","className","styles","src","alt","length","slice","map","genre","index","name","location","useLocation","backLinkLocationRef","useRef","state","from","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","movieData","console","log","to","current","type","Suspense","fallback","Loader"],"sourceRoot":""}