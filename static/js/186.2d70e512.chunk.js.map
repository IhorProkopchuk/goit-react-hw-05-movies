{"version":3,"file":"static/js/186.2d70e512.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CK,EAD/C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,kHCgB9B,UA5CgB,WACd,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEWR,EAAAA,EAAAA,IAAkBF,GAF7B,gBAEPW,EAFO,EAEPA,QACRL,EAAWK,GACXH,GAAW,GAJI,gDAMfI,QAAQC,IAAR,MACAL,GAAW,GAPI,yDAAH,qDAUhBE,GACD,GAAE,CAACV,KAGF,iCACE,wBAAI,YACHO,GACC,SAAC,IAAD,KAEA,8BACGF,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADE,OAQf,wBAAI,iDAMf,C","sources":["api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7578f42464aa1bf410194c3f5bd12bea';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../../api/api';\nimport { Loader } from '../Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {reviews.length > 0 ? (\n            <ul>\n              {reviews.map(({ author, content, id }) => (\n                <li key={id}>\n                  <h2>{author}</h2>\n                  <p>{content}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <h2>We don't have any reviews for this movie</h2>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getReviews","results","console","log","length","map","author","content","id"],"sourceRoot":""}