{"version":3,"file":"static/js/853.a192cbfc.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CK,EAD/C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,gKCU9B,EAvCe,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SAChB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAIC,iBACEX,EAAQU,EAAIE,OAAOC,SAASb,MAAMc,MAFrB,uBAIjBC,OAAOC,MAAM,gCAJI,iCAQnBR,GAAW,GARQ,kBAWXH,EAASL,GAXE,yDAajBiB,QAAQC,IAAR,MAbiB,QAgBnBV,GAAW,GACXE,EAAIE,OAAOO,QAjBQ,0DAAH,sDAoBlB,OACE,iCACE,kBACEd,SAAUI,EACVW,MAAO,CAAEC,UAAW,OAAQC,WAAY,QAF1C,WAIE,kBAAOC,KAAK,QAAQC,KAAK,OAAOJ,MAAO,CAAEK,MAAO,YAChD,mBAAQD,KAAK,SAAb,SAAsB,cAEvBjB,IAAW,SAACmB,EAAA,EAAD,IAAY,MAG7B,ECWD,EA7Ce,WACb,OAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOqB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRlC,EAAK,UAAGgC,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAKnC,EAAL,CAEA,IAAMoC,EAAQ,mCAAG,gHAEarC,EAAAA,EAAAA,IAAmBC,GAFhC,gBAGU,KADfqC,EAFK,EAELA,SACIC,OACVvB,OAAOC,MAAM,mBAEbY,EAAUS,GANC,gDASbpB,QAAQsB,MAAR,MACAX,EAAU,IAVG,yDAAH,qDAadQ,GAfkB,CAgBnB,GAAE,CAACJ,IAMJ,OACE,iCACE,SAAC,EAAD,CAAQ3B,SANS,SAAAL,GACnBiC,EAAgB,CAAEjC,MAAAA,GACnB,KAKG,wBACG2B,EAAOa,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMhB,GAAhD,SACGY,EAAMK,SAFFL,EAAME,GADA,QAUxB,C","sources":["api/api.jsx","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7578f42464aa1bf410194c3f5bd12bea';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Loader } from '../Loader/Loader';\n\nconst Search = ({ onSubmit }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const query = evt.target.elements.query.value;\n    if (!query) {\n      window.alert('Search query cannot be empty');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await onSubmit(query);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        style={{ marginTop: '20px', marginLeft: '20px' }}\n      >\n        <input name=\"query\" type=\"text\" style={{ width: '200px' }} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}{' '}\n    </>\n  );\n};\n\nSearch.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../api/api';\nimport Search from '../../components/Search/Search';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMoviesByQuery(query);\n        if (results.length === 0) {\n          window.alert('Movie not found');\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        console.error(error);\n        setMovies([]);\n      }\n    };\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleSubmit} />\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews","onSubmit","useState","loading","setLoading","handleSubmit","evt","preventDefault","target","elements","value","window","alert","console","log","reset","style","marginTop","marginLeft","name","type","width","Loader","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovie","results","length","error","map","movie","to","id","state","from","title"],"sourceRoot":""}