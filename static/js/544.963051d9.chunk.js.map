{"version":3,"file":"static/js/544.963051d9.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CK,EAD/C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,2CCjB9B,IAdkB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACnB,OACE,0BACE,wBACGA,EAAOC,KAAI,SAAAD,GAAM,OAChB,yBACE,SAAC,KAAD,CAAME,GAAE,kBAAaF,EAAOG,IAA5B,SAAmCH,EAAOI,SADnCJ,EAAOG,GADA,OAQzB,C,kHC6BD,UAtCa,WACX,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,gHAEEtB,EAAAA,EAAAA,MAFF,gBAEhBuB,EAFgB,EAEhBA,QACRP,EAAkBO,GAHM,gDAKxBH,EAAS,4DALe,yBAOxBF,GAAW,GAPa,4EAAH,qDAWzBI,GACD,GAAE,IAECL,GACK,SAAC,IAAD,IAGLE,GACK,uBAAIA,KAIX,+BACE,4BACE,wBAAI,oBACJ,SAAC,IAAD,CAAWV,OAAQM,QAI1B,C","sources":["api/api.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7578f42464aa1bf410194c3f5bd12bea';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(movies => (\n          <li key={movies.id}>\n            <Link to={`/movies/${movies.id}`}>{movies.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../../api/api';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError('Failed to fetch trending movies. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      <div>\n        <h2>Trending today</h2>\n        <MovieList movies={trendingMovies} />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews","movies","map","to","id","title","useState","trendingMovies","setTrendingMovies","loading","setLoading","error","setError","useEffect","fetchTrendingMovies","results"],"sourceRoot":""}