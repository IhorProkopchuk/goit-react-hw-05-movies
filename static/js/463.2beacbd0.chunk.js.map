{"version":3,"file":"static/js/463.2beacbd0.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CK,EAD/C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,8IChC9B,EAAkC,gCAAlC,EAAgF,4BAAhF,EAA2H,6B,SCmC3H,EAhCe,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SAWhB,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMF,SAZW,SAAAG,GACnBA,EAAIC,iBACJ,IAAMT,EAAQQ,EAAIE,OAAOC,SAASX,MAAMY,MACnCZ,GACHa,OAAOC,MAAM,kCAEfT,EAASL,GACTQ,EAAIE,OAAOK,OACZ,EAIG,WACE,kBACET,UAAWC,EACXS,KAAK,QACLC,KAAK,OACLC,YAAY,wBAEd,mBAAQZ,UAAWC,EAAqBU,KAAK,SAA7C,SAAsD,eAM7D,ECoBD,EA7Ce,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACR3B,EAAK,UAAGyB,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAK5B,EAAL,CAEA,IAAM6B,EAAQ,mCAAG,gHAEa9B,EAAAA,EAAAA,IAAmBC,GAFhC,gBAGU,KADf8B,EAFK,EAELA,SACIC,OACVlB,OAAOC,MAAM,mBAEbO,EAAUS,GANC,gDASbE,QAAQC,MAAR,MACAZ,EAAU,IAVG,yDAAH,qDAadQ,GAfkB,CAgBnB,GAAE,CAACJ,IAMJ,OACE,iCACE,SAAC,EAAD,CAAQpB,SANS,SAAAL,GACnB0B,EAAgB,CAAE1B,MAAAA,GACnB,KAKG,wBACGoB,EAAOc,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMjB,GAAhD,SACGa,EAAMK,SAFFL,EAAME,GADA,QAUxB,C","sources":["api/api.jsx","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7578f42464aa1bf410194c3f5bd12bea';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"Search_searchContainer__duLUl\",\"searchInput\":\"Search_searchInput__Qk-44\",\"searchButton\":\"Search_searchButton__8Jp1t\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Search.module.css';\n\nconst Search = ({ onSubmit }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const query = evt.target.elements.query.value;\n    if (!query) {\n      window.alert('Please enter a movie to search');\n    }\n    onSubmit(query);\n    evt.target.reset();\n  };\n\n  return (\n    <div className={styles.searchContainer}>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={styles.searchInput}\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Search for a movie\"\n        />\n        <button className={styles.searchButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../api/api';\nimport Search from '../../components/Search/Search';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMoviesByQuery(query);\n        if (results.length === 0) {\n          window.alert('Movie not found');\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        console.error(error);\n        setMovies([]);\n      }\n    };\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleSubmit} />\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews","onSubmit","className","styles","evt","preventDefault","target","elements","value","window","alert","reset","name","type","placeholder","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovie","results","length","console","error","map","movie","to","id","state","from","title"],"sourceRoot":""}