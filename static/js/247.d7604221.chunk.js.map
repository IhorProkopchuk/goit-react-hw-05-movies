{"version":3,"file":"static/js/247.d7604221.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CK,EAD/C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,2HCgC9B,UA1Da,WACX,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEWX,EAAAA,EAAAA,IAAeD,GAF1B,gBAEJK,EAFI,EAEJA,KACRC,EAAQD,GAHI,gDAKZK,EAAS,sDALG,yBAOZF,GAAW,GAPC,4EAAH,qDAWbI,GACD,GAAE,CAACZ,IAEJ,IAAMa,EAAmB,SAAAC,GACvBA,EAAMC,OAAOC,IAAMC,CACpB,EAED,OAAIV,GACK,SAAC,IAAD,IAGLE,GACK,uBAAIA,KAIX,iCACE,wBAAI,UACE,wBACGJ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OACR,2BACE,gBACEL,IACEK,EAAY,yCAC0BA,GAClCJ,EAENK,QAAST,EACTU,MAAM,MACNC,IAAKL,KAEP,wBAAKA,KACL,yBAAG,cAAYC,OAZRD,EADD,QAmBvB,C","sources":["api/api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7578f42464aa1bf410194c3f5bd12bea';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast } from '../../api/api';\nimport { Loader } from '../Loader/Loader';\n\nimport imageNotFound from '../Cast/No_image.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError('Error fetching movie cast. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  const handleImageError = event => {\n    event.target.src = imageNotFound;\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      <h2>Cast</h2>\n            <ul>\n              {cast.map(({ name, character, profile_path }) => (\n                <li key={name}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                        : imageNotFound\n                    }\n                    onError={handleImageError}\n                    width=\"200\"\n                    alt={name}\n                  />\n                  <h2>{name}</h2>\n                  <p>Character: {character}</p>\n                </li>\n              ))}\n            </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews","useParams","useState","cast","setCast","loading","setLoading","error","setError","useEffect","getCast","handleImageError","event","target","src","imageNotFound","map","name","character","profile_path","onError","width","alt"],"sourceRoot":""}